<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>io.mercury</groupId>
		<artifactId>commons</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<artifactId>commons-core</artifactId>
	<packaging>jar</packaging>

	<name>commons-core</name>

	<properties>
		<slf4j.version>1.7.30</slf4j.version>
		<log4j2.version>2.13.3</log4j2.version>
	</properties>

	<dependencies>

		<!-- JSR305 Annotations for Findbugs -->
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<version>3.0.2</version>
		</dependency>

		<!-- The javax.inject API -->
		<!-- <dependency> <groupId>javax.inject</groupId> <artifactId>javax.inject</artifactId> 
			<version>1</version> </dependency> -->

		<!-- The Apache Commons IO library contains utility classes, stream implementations, 
			file filters, file comparators, endian transformation classes, and much more. -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>

		<!-- Apache Commons Lang, a package of Java utility classes for the classes 
			that are in java.lang's hierarchy, or are considered to be so standard as 
			to justify existence in java.lang. -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.10</version>
		</dependency>

		<!-- The Apache Commons Collections package contains types that extend 
			and augment the Java Collections Framework. -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.4</version>
		</dependency>

		<!-- Eclipse Collections Main Library -->
		<dependency>
			<groupId>org.eclipse.collections</groupId>
			<artifactId>eclipse-collections</artifactId>
			<version>10.2.0</version>
		</dependency>

		<!-- ################### Log dependency ################### -->
		<!-- #### slf4j API + slf4j Adaptor + log4j2 Implement #### -->
		<!-- The slf4j API -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		
		<!-- Log4j implemented over SLF4J -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<!-- JCL 1.2 implemented over SLF4J -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<!-- JUL to SLF4J bridge -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<!-- The Apache Log4j SLF4J API binding to Log4j 2 Core -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j2.version}</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Junit4 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>

		<!-- EasyMock provides an easy way to create Mock Objects for interfaces 
			and classes generating them on the fly -->
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>4.2</version>
			<scope>test</scope>
		</dependency>

	</dependencies>
</project>
